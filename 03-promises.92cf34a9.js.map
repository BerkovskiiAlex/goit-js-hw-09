{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASH,EAAKE,cAAc,UAmDlCF,EAAKI,iBAAiB,UAjDDC,IACnBA,EAAMC,iBACNH,EAAOI,UAAW,EAClBC,QAAQC,IAAIJ,EAAMK,OAAOC,UAEzB,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWV,EAAMK,OAAOC,SAE7CH,QAAQQ,IAAID,EAAOE,OAEnB,IAAK,IAAIC,EAAI,EAAGA,GAAKC,OAAOJ,EAAOE,OAAQC,IAAK,CAC9C,MAAME,EAAeD,OAAON,EAAMI,OAASE,OAAOL,EAAKG,QAAUC,EAAI,GACrEG,YAAW,KACTC,EAAcJ,EAAGE,GACdG,MAAK,EAACC,SAAEA,EAAQZ,MAAEA,MACjBa,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBH,QAAiBZ,MAAW,CAE/CY,SAAU,gBACVI,QAAS,KAEZ,IAEFC,OAAM,EAACL,SAAEA,EAAQZ,MAAEA,MAClBa,EAAA3B,GAAS4B,OAAOI,QACd,sBAAoBN,QAAeZ,MAAW,CAE5CY,SAAU,gBACVI,QAAS,KAEZ,GACD,GACHR,E,CAGL,SAASE,EAAcE,EAAUZ,GAC/B,MAAMmB,EAAgBC,KAAKC,SAAW,GAUtC,OARkB,IAAIC,SAAQ,CAACC,EAASC,KAClCL,EACFI,EAAQ,C,SAAEX,E,MAAUZ,IAEpBwB,EAAS,C,SAAEZ,E,MAAUZ,GAAQ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submit = form.querySelector('button');\n\nconst onFormSubmit = event => {\n  event.preventDefault();\n  submit.disabled = true;\n  console.dir(event.target.elements);\n\n  const { delay, step, amount } = event.target.elements;\n\n  console.log(amount.value);\n\n  for (let i = 1; i <= Number(amount.value); i++) {\n    const currentDelay = Number(delay.value) + Number(step.value) * (i - 1);\n    setTimeout(() => {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`,\n            {\n              position: 'center-center',\n              timeout: 5000,\n            }\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`,\n            {\n              position: 'center-center',\n              timeout: 5000,\n            }\n          );\n        });\n    }, currentDelay);\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    const myPromise = new Promise((resolve, rejected) => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        rejected({ position, delay });\n      }\n    });\n\n    return myPromise;\n  }\n};\n\nform.addEventListener('submit', onFormSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submit","addEventListener","event","preventDefault","disabled","console","dir","target","elements","delay","delay1","step","amount","log","value","i","Number","currentDelay","setTimeout","createPromise","then","position","$parcel$interopDefault","Notify","success","timeout","catch","failure","shouldResolve","Math","random","Promise","resolve","rejected"],"version":3,"file":"03-promises.92cf34a9.js.map"}